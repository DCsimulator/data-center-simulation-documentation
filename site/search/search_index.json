{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"SimulationSedai Abstract Running tests on the production clouds is very risky and can cause serious downtime and availability issues when gone wrong. Also using separate clouds solely for testing of applications on real life situations can be very expensive which can cost as much as the running production cloud. A cloud simulation tool which can simulate a real life production level data centre which allows to deploy any application in it to run tests on them can be very much cost efficient and could do less impact on the availability of the existing application. The simulation tool will be able simulate the three core components of a data center, they are network, storage and computing. Further a chaos engineering framework can be applied on the above simulation tool to inject chaos and to observe how the applications handle the injected chaos. Therefore by using the above simulation tools apps can be tested for all vulnerabilities cheaply, and reduce the risk of any outages in future by using the chaos engineering framework.","title":"Abstract"},{"location":"#simulationsedai","text":"","title":"SimulationSedai"},{"location":"#abstract","text":"Running tests on the production clouds is very risky and can cause serious downtime and availability issues when gone wrong. Also using separate clouds solely for testing of applications on real life situations can be very expensive which can cost as much as the running production cloud. A cloud simulation tool which can simulate a real life production level data centre which allows to deploy any application in it to run tests on them can be very much cost efficient and could do less impact on the availability of the existing application. The simulation tool will be able simulate the three core components of a data center, they are network, storage and computing. Further a chaos engineering framework can be applied on the above simulation tool to inject chaos and to observe how the applications handle the injected chaos. Therefore by using the above simulation tools apps can be tested for all vulnerabilities cheaply, and reduce the risk of any outages in future by using the chaos engineering framework.","title":"Abstract"},{"location":"appComponents/","text":"This simulation toolkit consists of several classes which works together to give the final result that is the simulated data. The different classes in use are as follows, application/AppConfig.java This java file retrieves data from AppConfig.json file. Global variables: depends: type: ArrayList<AppDependency> accessModifier: private description: list of application that are dependent on the current retrieving process processes: type: ArrayList<Processes> accessModifier: private description: list of processes applicationConfig: type: JSONObject accessModifier: private description: JSON object variable processConfig: type: JSONObject accessModifier: private description: JSON object variable configArray: type: JSONArray accessModifier: private description: JSON array variable processArray: type: JSONArray accessModifier: private description: JSON array variable Functions: AppConfig: type: constructor accessModifier: public description: used for initializing and retrieving data from AppConfig.json file getDepends: // problem type: general function accessModifier: public returnType: ArrayList<AppDependency> description: lala getProcesses: type: general function accessModifier: public returnType: ArrayList<Processes> description: returns list of processes getOneProcess: type: general function accessModifier: public returnType: Processes description: returns a single process application/AppDependency.java They are used to retrieve various app dependencies. Global variables: id: type: int accessModifier: private description: application id processId: type: int accessModifier: private description: id of processes resources: type: ArrayList<String> accessModifier: private description: resources that depends on type: type: String accessModifier: private description: resources whose usage affects other resources factors: type: ArrayList<Float> accessModifier: private description: amount by which type affects the resources Functions: AppDependency: type: constructor accessModifier: public description: used for initialization getAppId: type: general function accessModifier: public returnType: int description: returns the application id getProcessId: type: general function accessModifier: public returnType: int description: return the process id getResources: type: general function accessModifier: public returnType: ArrayList<String> description: returns the list of resources that depends on other resourcres getType: type: general function accessModifier: public returnType: String description: returns the resource that affects other resources getFactors: type: general function accessModifier: public returnType: ArrayList<Float> description: returns list of factors for each resource dependencies application/Application.java They are generated by the initiator and their number varies according to the number of applications that are simulated. They generate processes of an application according to the configuration file. They also create various instances of the processes generated in the previous step. The generated number of instances depend on the number of requests the application is handling at that particular time. This is determined by the seasonality of the application and the time at which the application is created. All the generated applications and instances satisfy the constraints set for each application in the configuration file. The utilisation of various system resources by the process instances, the proportion of different types of process instances, and other factors like memory leak of each process instance etc are governed by the configuration file and are taken care of when the processes and instances are populated. Global variables: processes: type: ArrayList<Processes> accessModifier: private description: list of the processes specified in appConfig instances: type: ArrayList<Instances> accessModifier: private description: list of all instances generated from processes numOfProcesses: type: int accessModifier: private description: total number of processes flag: type: Integer[] accessModifier: private description: flag values used while creating instances appConfig: type: AppConfig accessModifier: private description: used to retrieve applications config while generating processes Functions: Application: type: constructor accessModifier: public description: used for initialization populateProcesses: type: general function accessModifier: private returnType: void description: initialize the processes list populateInstances: type: general function accessModifier: public returnType: ArrayList<Instances> description: generates instances from processes list deallocateInstances: type: general function accessModifier: public returnType: void description: deallocates an instance application/Instances.java This java file is used to create the process instances as mentioned in the config file Global variables: processId: type: int accessModifier: private description: id of the process actual_memory: type: float accessModifier: private description: the actual memory usage of the instance actual_runtime: type: int accessModifier: private description: the actual run time of the instance actual_cpu: type: float accessModifier: private description: the actual cpu usage of the instance mem_leak: type: float accessModifier: private description: memory leak of the instance state: type: char accessModifier: private description: the state of the instance time_executed: type: int accessModifier: private description: the time that is executed by the instance diskIO: type: long accessModifier: private description: the disk IO usage by the instance bandwidth: type: long accessModifier: private description: the bandwidth usage by the instance appDependencies: type: ArrayList<AppDependency> accessModifier: private description: list of the app dependency regarding the instance Functions: Instances: type: constructor accessModifier: public description: used for initialization getAppDependency: type: general function accessModifier: public returnType: ArrayList<AppDependency> description: returns the list of app dependency for the instance getActualMemory: type: general function accessModifier: public returnType: float description: return the actual memory usage of the instance setActualMemory: type: general function accessModifier: public returnType: void description: sets the memory usage of the instance getActualRunTime: type: general function accessModifier: public returnType: int description: returns the actual run time of the instance setActualRunTime: type: general function accessModifier: public returnType: void description: sets the run time of the instance getActualCpu: type: general function accessModifier: public returnType: float description: returns the actual cpu usage of the instance setActualCpu: type: general function accessModifier: public returnType: void description: sets the actual cpu utilization of the instance getDiskIO: type: general function accessModifier: public returnType: long description: return the disk IO usage of the instance getBandwidh: type: general function accessModifier: public returnType: long description: return the bandwidth utilization of the instance setState: type: general function accessModifier: public returnType: boolean description: returns true if the state is any of the defined ones getState: type: genral function accessModifier: public returnType: char description: returns the current state of the instance getTimeExecuted: type: genral function accessModifier: public returnType: int description: return the time for which the instance has executed setTimeExecuted: type: general function accessModifier: public returnType: void descripton: sets the time for which the instance has executed exec: type: general function accessModifier: public returnType: int description: calculates and returns the run time of the instance getMemoryLeak: type: genral function accessModifier: public returnType: float description: returns the memory leak of the instance getProcessId: type: general function accessModifier: public returnType: int description: returns the id of the process to which the instance belongs application/Processes.java This java file is used to create each processes according to he config file as mentioned by the user Global varables: min_memory: type: float accessModifier: private description: the minimum memory usage of the process max_memory: type: float accessModifier: private description: the maximum memory usage of the process actual_memory: type: float accessModifier: private description: the actual memory usage of the process min_runtime: type: int accessModifier: private description: the minimum run time of the process max_runtime: type: int accessModifier: private description: the maximum run time of the process actual_runtime: type: int accessModifier: private description: the actual run time of the process min_cpu: type: float accessModifier: private description: the minimum cpu usage of the process max_cpu: type: float accessModifier: private description: the maximum cpu usage of the process actual_cpu: type: float accessModifier: private description: the actual cpu usage of the process min_diskIO: type: long accessModifier: private description: the minimum disk IO usage of the process max_diskIO: type: long accessModifier: private description: the maximum disk IO usage of the process min_bandwidth: type: long accessModifier: private description: the minimum bandwidth usage of the process max_bandwidth: type: long accessModifier: private description: the maximum bandwidth usage of the process mem_leak: type: float accessModifier: private description: memory leak of the process count_proportion type: int accessModifier: private description: count of the portion of the instances for the process state: type: char accessModifier: private description: the state of the process time_executed: type: int accessModifier: private description: the time that is executed by the process appDependencies: type: ArrayList<AppDependency> accessModifier: private description: list of the app dependency regarding the process Functions: Processes: type: constructor accessModifier: public description: used for initialization setAppDependency: type: general function accessModifier: public returnType: void description: sets the list of app dependency for the process getAppDependency: type: general function accessModifier: public returnType: ArrayList<AppDependency> description: returns the list of app dependency for the process getMinMemory: type: general function accessModifier: public returnType: float description: return the minimum memory usage of the process getMaxMemory: type: general function accessModifier: public returnType: float description: return the maximum memory usage of the process getActualMemory: type: general function accessModifier: public returnType: float description: return the actual memory usage of the process setActualMemory: type: general function accessModifier: public returnType: void description: sets the memory usage of the process getMinRunTime: type: general function accessModifier: public returnType: int description: returns the minimum run time of the process getMaxRunTime: type: general function accessModifier: public returnType: int description: returns the maximum run time of the process getActualRunTime: type: general function accessModifier: public returnType: int description: returns the actual run time of the process setActualRunTime: type: general function accessModifier: public returnType: void description: sets the run time of the process getMinCpu: type: general function accessModifier: public returnType: float description: returns the minimum cpu usage of the process getMaxCpu: type: general function accessModifier: public returnType: float description: returns the maximum cpu usage of the process getActualCpu: type: general function accessModifier: public returnType: float description: returns the actual cpu usage of the process setActualCpu: type: general function accessModifier: public returnType: void description: sets the actual cpu utilization of the process getMinDiskIO: type: general function accessModifier: public returnType: long description: return the minimum disk IO usage of the process getMaxDiskIO: type: general function accessModifier: public returnType: long description: return the maximum disk IO usage of the process getMinBandwidh: type: general function accessModifier: public returnType: long description: return the minimum bandwidth utilization of the process getMaxBandwidh: type: general function accessModifier: public returnType: long description: return the maximum bandwidth utilization of the process setState: type: general function accessModifier: public returnType: boolean description: returns true if the state is any of the defined ones getCountProportion: type: general function accessModifier: public returnType: int description: returns the count proportion of the process setState: type: genral function accessModifier: public returnType: boolean description: returns true if valid state is entered getState: type: genral function accessModifier: public returnType: char description: returns the current state of the process getTimeExecuted: type: genral function accessModifier: public returnType: int description: return the time for which the process has executed setTimeExecuted: type: general function accessModifier: public returnType: void descripton: sets the time for which the process has executed getMemoryLeak: type: genral function accessModifier: public returnType: float description: returns the memory leak of the process","title":"Application"},{"location":"appComponents/#applicationappconfigjava","text":"This java file retrieves data from AppConfig.json file. Global variables: depends: type: ArrayList<AppDependency> accessModifier: private description: list of application that are dependent on the current retrieving process processes: type: ArrayList<Processes> accessModifier: private description: list of processes applicationConfig: type: JSONObject accessModifier: private description: JSON object variable processConfig: type: JSONObject accessModifier: private description: JSON object variable configArray: type: JSONArray accessModifier: private description: JSON array variable processArray: type: JSONArray accessModifier: private description: JSON array variable Functions: AppConfig: type: constructor accessModifier: public description: used for initializing and retrieving data from AppConfig.json file getDepends: // problem type: general function accessModifier: public returnType: ArrayList<AppDependency> description: lala getProcesses: type: general function accessModifier: public returnType: ArrayList<Processes> description: returns list of processes getOneProcess: type: general function accessModifier: public returnType: Processes description: returns a single process","title":" application/AppConfig.java"},{"location":"appComponents/#applicationappdependencyjava","text":"They are used to retrieve various app dependencies. Global variables: id: type: int accessModifier: private description: application id processId: type: int accessModifier: private description: id of processes resources: type: ArrayList<String> accessModifier: private description: resources that depends on type: type: String accessModifier: private description: resources whose usage affects other resources factors: type: ArrayList<Float> accessModifier: private description: amount by which type affects the resources Functions: AppDependency: type: constructor accessModifier: public description: used for initialization getAppId: type: general function accessModifier: public returnType: int description: returns the application id getProcessId: type: general function accessModifier: public returnType: int description: return the process id getResources: type: general function accessModifier: public returnType: ArrayList<String> description: returns the list of resources that depends on other resourcres getType: type: general function accessModifier: public returnType: String description: returns the resource that affects other resources getFactors: type: general function accessModifier: public returnType: ArrayList<Float> description: returns list of factors for each resource dependencies","title":" application/AppDependency.java"},{"location":"appComponents/#applicationapplicationjava","text":"They are generated by the initiator and their number varies according to the number of applications that are simulated. They generate processes of an application according to the configuration file. They also create various instances of the processes generated in the previous step. The generated number of instances depend on the number of requests the application is handling at that particular time. This is determined by the seasonality of the application and the time at which the application is created. All the generated applications and instances satisfy the constraints set for each application in the configuration file. The utilisation of various system resources by the process instances, the proportion of different types of process instances, and other factors like memory leak of each process instance etc are governed by the configuration file and are taken care of when the processes and instances are populated. Global variables: processes: type: ArrayList<Processes> accessModifier: private description: list of the processes specified in appConfig instances: type: ArrayList<Instances> accessModifier: private description: list of all instances generated from processes numOfProcesses: type: int accessModifier: private description: total number of processes flag: type: Integer[] accessModifier: private description: flag values used while creating instances appConfig: type: AppConfig accessModifier: private description: used to retrieve applications config while generating processes Functions: Application: type: constructor accessModifier: public description: used for initialization populateProcesses: type: general function accessModifier: private returnType: void description: initialize the processes list populateInstances: type: general function accessModifier: public returnType: ArrayList<Instances> description: generates instances from processes list deallocateInstances: type: general function accessModifier: public returnType: void description: deallocates an instance","title":" application/Application.java"},{"location":"appComponents/#applicationinstancesjava","text":"This java file is used to create the process instances as mentioned in the config file Global variables: processId: type: int accessModifier: private description: id of the process actual_memory: type: float accessModifier: private description: the actual memory usage of the instance actual_runtime: type: int accessModifier: private description: the actual run time of the instance actual_cpu: type: float accessModifier: private description: the actual cpu usage of the instance mem_leak: type: float accessModifier: private description: memory leak of the instance state: type: char accessModifier: private description: the state of the instance time_executed: type: int accessModifier: private description: the time that is executed by the instance diskIO: type: long accessModifier: private description: the disk IO usage by the instance bandwidth: type: long accessModifier: private description: the bandwidth usage by the instance appDependencies: type: ArrayList<AppDependency> accessModifier: private description: list of the app dependency regarding the instance Functions: Instances: type: constructor accessModifier: public description: used for initialization getAppDependency: type: general function accessModifier: public returnType: ArrayList<AppDependency> description: returns the list of app dependency for the instance getActualMemory: type: general function accessModifier: public returnType: float description: return the actual memory usage of the instance setActualMemory: type: general function accessModifier: public returnType: void description: sets the memory usage of the instance getActualRunTime: type: general function accessModifier: public returnType: int description: returns the actual run time of the instance setActualRunTime: type: general function accessModifier: public returnType: void description: sets the run time of the instance getActualCpu: type: general function accessModifier: public returnType: float description: returns the actual cpu usage of the instance setActualCpu: type: general function accessModifier: public returnType: void description: sets the actual cpu utilization of the instance getDiskIO: type: general function accessModifier: public returnType: long description: return the disk IO usage of the instance getBandwidh: type: general function accessModifier: public returnType: long description: return the bandwidth utilization of the instance setState: type: general function accessModifier: public returnType: boolean description: returns true if the state is any of the defined ones getState: type: genral function accessModifier: public returnType: char description: returns the current state of the instance getTimeExecuted: type: genral function accessModifier: public returnType: int description: return the time for which the instance has executed setTimeExecuted: type: general function accessModifier: public returnType: void descripton: sets the time for which the instance has executed exec: type: general function accessModifier: public returnType: int description: calculates and returns the run time of the instance getMemoryLeak: type: genral function accessModifier: public returnType: float description: returns the memory leak of the instance getProcessId: type: general function accessModifier: public returnType: int description: returns the id of the process to which the instance belongs","title":" application/Instances.java"},{"location":"appComponents/#applicationprocessesjava","text":"This java file is used to create each processes according to he config file as mentioned by the user Global varables: min_memory: type: float accessModifier: private description: the minimum memory usage of the process max_memory: type: float accessModifier: private description: the maximum memory usage of the process actual_memory: type: float accessModifier: private description: the actual memory usage of the process min_runtime: type: int accessModifier: private description: the minimum run time of the process max_runtime: type: int accessModifier: private description: the maximum run time of the process actual_runtime: type: int accessModifier: private description: the actual run time of the process min_cpu: type: float accessModifier: private description: the minimum cpu usage of the process max_cpu: type: float accessModifier: private description: the maximum cpu usage of the process actual_cpu: type: float accessModifier: private description: the actual cpu usage of the process min_diskIO: type: long accessModifier: private description: the minimum disk IO usage of the process max_diskIO: type: long accessModifier: private description: the maximum disk IO usage of the process min_bandwidth: type: long accessModifier: private description: the minimum bandwidth usage of the process max_bandwidth: type: long accessModifier: private description: the maximum bandwidth usage of the process mem_leak: type: float accessModifier: private description: memory leak of the process count_proportion type: int accessModifier: private description: count of the portion of the instances for the process state: type: char accessModifier: private description: the state of the process time_executed: type: int accessModifier: private description: the time that is executed by the process appDependencies: type: ArrayList<AppDependency> accessModifier: private description: list of the app dependency regarding the process Functions: Processes: type: constructor accessModifier: public description: used for initialization setAppDependency: type: general function accessModifier: public returnType: void description: sets the list of app dependency for the process getAppDependency: type: general function accessModifier: public returnType: ArrayList<AppDependency> description: returns the list of app dependency for the process getMinMemory: type: general function accessModifier: public returnType: float description: return the minimum memory usage of the process getMaxMemory: type: general function accessModifier: public returnType: float description: return the maximum memory usage of the process getActualMemory: type: general function accessModifier: public returnType: float description: return the actual memory usage of the process setActualMemory: type: general function accessModifier: public returnType: void description: sets the memory usage of the process getMinRunTime: type: general function accessModifier: public returnType: int description: returns the minimum run time of the process getMaxRunTime: type: general function accessModifier: public returnType: int description: returns the maximum run time of the process getActualRunTime: type: general function accessModifier: public returnType: int description: returns the actual run time of the process setActualRunTime: type: general function accessModifier: public returnType: void description: sets the run time of the process getMinCpu: type: general function accessModifier: public returnType: float description: returns the minimum cpu usage of the process getMaxCpu: type: general function accessModifier: public returnType: float description: returns the maximum cpu usage of the process getActualCpu: type: general function accessModifier: public returnType: float description: returns the actual cpu usage of the process setActualCpu: type: general function accessModifier: public returnType: void description: sets the actual cpu utilization of the process getMinDiskIO: type: general function accessModifier: public returnType: long description: return the minimum disk IO usage of the process getMaxDiskIO: type: general function accessModifier: public returnType: long description: return the maximum disk IO usage of the process getMinBandwidh: type: general function accessModifier: public returnType: long description: return the minimum bandwidth utilization of the process getMaxBandwidh: type: general function accessModifier: public returnType: long description: return the maximum bandwidth utilization of the process setState: type: general function accessModifier: public returnType: boolean description: returns true if the state is any of the defined ones getCountProportion: type: general function accessModifier: public returnType: int description: returns the count proportion of the process setState: type: genral function accessModifier: public returnType: boolean description: returns true if valid state is entered getState: type: genral function accessModifier: public returnType: char description: returns the current state of the process getTimeExecuted: type: genral function accessModifier: public returnType: int description: return the time for which the process has executed setTimeExecuted: type: general function accessModifier: public returnType: void descripton: sets the time for which the process has executed getMemoryLeak: type: genral function accessModifier: public returnType: float description: returns the memory leak of the process","title":" application/Processes.java"},{"location":"architecture/","text":"Architecture","title":"Documentation"},{"location":"architecture/#architecture","text":"","title":"Architecture"},{"location":"configComponents/","text":"config/AppConfig.json This json file allows the user to configure each of the applications that is to be simulated. The user can set the application id minimum and maximum memory usage, minimum and maximum cpu usage, minimum and maximum diskIO usage, minimum and maximum network bandwidth usage, minimum and maximum runtime of applications, memory leak and count proportion. Also the user can define how one application depends on the other applications. This file includes: An array of application objects in which each objects has, - applicationId: unique id of an application - processes: an array of process objects, each process include - processId: Unique id of process - min_memory: minimum amount of memory a process instance use - max_memory: maximum amount of memory a process instance use - min_cpu: minimum amount of cpu a process instance use - max_cpu: maximum amount of cpu a process instance use - min_diskIO: min amount of disk IO bandwidth a process instance use - max_diskIO: max amount of disk IO bandwidth a process instance use - min_bandwidth: min amount of network bandwidth a process instance use - max_bandwidth: min amount of network bandwidth a process instance use - mem_leak: percent of memory not deallocated on process termination - Count_proportion: proportion of portugal process instance in all instances - min_runtime: minimum amount of cpu time of process - max_runtime: maximum amount of cpu time of process - depends: An array of objects where each object has, - applicationId: application to which process is related - processId: the process of application it is related to - type: which resource of this process is affected - resources: which resources of the dependant process affects this process\u2019s resource utiliztaion. - factors: the factor of dependency of the resources in the resources array to the type resource of this process. config/SysConfig.json This json file is used to configure the system resources and the simulation constraints of simulation tool. The user can configure the duration of the simulation, the interval at which the user wants to retrieve the metrics, the number of applications to be simulated, the number of processes within each of the applications, a base number of instances that each process may have, a multiplier array for configuring the seasonality aspect of the simulation, time quantum for the round robin scheduling, the server memory and finally the system resources which are the RAM, hard disk, disk IO, network bandwidth and the basic CPU utilization. This file includes: - simDuration: duration of simulation in milliseconds [type: long] - interval: interval in which metrics are read in milliseconds [type: long] - numOfProcesses: number of processes [type: int] - baseNumOfInstances: the minimum number of instances that will be handled by the simulator at any time [type: int] - quantum: the time quantum for round robin function in milliseconds [type: int] - serverMemory: max memory of the server (simulator) in MB [type: long] - multiplier: seasonality multiplier of every hour in a day [type: float array] - systemResources: resources of the system [type: object] - RAM: size of the ram [type: long] - hardDisk: size of the hard disk [type: long] - bandwidth: network bandwidth of the system [type: long] - diskIO: disk input output speed in KB/s [type: long] - CPUBase: base value of cpu in percent [type: int]","title":"Config"},{"location":"configComponents/#configappconfigjson","text":"This json file allows the user to configure each of the applications that is to be simulated. The user can set the application id minimum and maximum memory usage, minimum and maximum cpu usage, minimum and maximum diskIO usage, minimum and maximum network bandwidth usage, minimum and maximum runtime of applications, memory leak and count proportion. Also the user can define how one application depends on the other applications. This file includes: An array of application objects in which each objects has, - applicationId: unique id of an application - processes: an array of process objects, each process include - processId: Unique id of process - min_memory: minimum amount of memory a process instance use - max_memory: maximum amount of memory a process instance use - min_cpu: minimum amount of cpu a process instance use - max_cpu: maximum amount of cpu a process instance use - min_diskIO: min amount of disk IO bandwidth a process instance use - max_diskIO: max amount of disk IO bandwidth a process instance use - min_bandwidth: min amount of network bandwidth a process instance use - max_bandwidth: min amount of network bandwidth a process instance use - mem_leak: percent of memory not deallocated on process termination - Count_proportion: proportion of portugal process instance in all instances - min_runtime: minimum amount of cpu time of process - max_runtime: maximum amount of cpu time of process - depends: An array of objects where each object has, - applicationId: application to which process is related - processId: the process of application it is related to - type: which resource of this process is affected - resources: which resources of the dependant process affects this process\u2019s resource utiliztaion. - factors: the factor of dependency of the resources in the resources array to the type resource of this process.","title":" config/AppConfig.json"},{"location":"configComponents/#configsysconfigjson","text":"This json file is used to configure the system resources and the simulation constraints of simulation tool. The user can configure the duration of the simulation, the interval at which the user wants to retrieve the metrics, the number of applications to be simulated, the number of processes within each of the applications, a base number of instances that each process may have, a multiplier array for configuring the seasonality aspect of the simulation, time quantum for the round robin scheduling, the server memory and finally the system resources which are the RAM, hard disk, disk IO, network bandwidth and the basic CPU utilization. This file includes: - simDuration: duration of simulation in milliseconds [type: long] - interval: interval in which metrics are read in milliseconds [type: long] - numOfProcesses: number of processes [type: int] - baseNumOfInstances: the minimum number of instances that will be handled by the simulator at any time [type: int] - quantum: the time quantum for round robin function in milliseconds [type: int] - serverMemory: max memory of the server (simulator) in MB [type: long] - multiplier: seasonality multiplier of every hour in a day [type: float array] - systemResources: resources of the system [type: object] - RAM: size of the ram [type: long] - hardDisk: size of the hard disk [type: long] - bandwidth: network bandwidth of the system [type: long] - diskIO: disk input output speed in KB/s [type: long] - CPUBase: base value of cpu in percent [type: int]","title":" config/SysConfig.json"},{"location":"fileComponents/","text":"file/FileSaver.java This java class handles the file writing process. Global variables: fw: type: FileWriter accessModifier: private description: used to open or create file and write to it Functions: FileSaver: type: constructor accessModifier: public description: opens or create a file in append mode, filename: output.jsonl FileSaver: type: constructor accessModifier: public parameters: fileName: type: String description: opens or create a file in append mode, filename: name given as argument write: type: general function accessModifier: public returnType: boolean parameters: mt: type: Metrics description: write to a file and returns status close: type: general function accessModifier: public returnType: void description: close the opened file","title":"File"},{"location":"fileComponents/#filefilesaverjava","text":"This java class handles the file writing process. Global variables: fw: type: FileWriter accessModifier: private description: used to open or create file and write to it Functions: FileSaver: type: constructor accessModifier: public description: opens or create a file in append mode, filename: output.jsonl FileSaver: type: constructor accessModifier: public parameters: fileName: type: String description: opens or create a file in append mode, filename: name given as argument write: type: general function accessModifier: public returnType: boolean parameters: mt: type: Metrics description: write to a file and returns status close: type: general function accessModifier: public returnType: void description: close the opened file","title":" file/FileSaver.java"},{"location":"fileStructure/","text":"The overall file structure of the simulation tool is as follows, application/ AppConfig.java AppDependency.java Application.java Instances.java Processes.java config/ AppConfig.json SysConfig.json file/ FileSaver.java metrics/ Metrics.java simulation/ Simulation.java system/ SysConfig.java SystemResource.java Init.java","title":"File Structure"},{"location":"initComponents/","text":"Init.java It starts the simulation process of the whole data center by creating applications as described in the configuration file. It generates Application objects which in turns creates applications which are then simulated. Global variables: systemResources: type: ArrayList<SystemResource> accessModifier: public description: list of system resources Functions: main: type: main function accessModifier: public returnType: void description: main function called by JVM","title":"Init"},{"location":"initComponents/#initjava","text":"It starts the simulation process of the whole data center by creating applications as described in the configuration file. It generates Application objects which in turns creates applications which are then simulated. Global variables: systemResources: type: ArrayList<SystemResource> accessModifier: public description: list of system resources Functions: main: type: main function accessModifier: public returnType: void description: main function called by JVM","title":" Init.java"},{"location":"installation/","text":"Install Java Run the following code in the terminal to install java in the system, sudo apt update sudo apt install default-jre sudo apt install default-jdk To check if java is installed, javac -version java -version this should return the corresponding version. Install VictoriaMetrics Run the following command in the terminal to install VictoriaMetrics, snap install victoriametrics To run VictoriaMetrics as a system service read this . Install Gradle To install Gradle run the following commands in terminal, Install SDKMAN! curl -s \"https://get.sdkman.io\" | bash Install Gradle through SDKMAN! sdk install gradle 7.0 Dependencies JSON in Java Usage Clone the repo and go to the directory, gradle run","title":"Installation"},{"location":"installation/#install-java","text":"Run the following code in the terminal to install java in the system, sudo apt update sudo apt install default-jre sudo apt install default-jdk To check if java is installed, javac -version java -version this should return the corresponding version.","title":"Install Java"},{"location":"installation/#install-victoriametrics","text":"Run the following command in the terminal to install VictoriaMetrics, snap install victoriametrics To run VictoriaMetrics as a system service read this .","title":"Install VictoriaMetrics"},{"location":"installation/#install-gradle","text":"To install Gradle run the following commands in terminal, Install SDKMAN! curl -s \"https://get.sdkman.io\" | bash Install Gradle through SDKMAN! sdk install gradle 7.0","title":"Install Gradle"},{"location":"installation/#dependencies","text":"JSON in Java","title":"Dependencies"},{"location":"installation/#usage","text":"Clone the repo and go to the directory, gradle run","title":"Usage"},{"location":"metricsComponents/","text":"metrics/Metrics.java Global variables: timestamp: type: long accessModifier: private description: timestamp of the metrics retrieved totalRuntime: type: long accessModifier: private description: the total runtime of simulation p_cpu: type: float accessModifier: private desription: cpu utilization of a particular process p_memory: type: float accessModifier: private desription: memory utilization of a particular process numOfInstances: type: int accessModifier: private description: the number of instances applicationId: type: int accessModifier: private description: id of the application diskIO: type: long accessModifier: private description: disk IO usage bandwidth: type: long aceessModifier: private description: bandwidth usage Functions: Metrics: type: constructor accessModifier: public description: used for initilization getTimeStamp: type: general function accessModifier: public returnType: long description: returns the timestamp of metrics getRunTime: type: general function accessModifier: public returnType: long description: returns the run time getCpuUtil: type: general function accessModifier: public returnType: float description: returns the cpu utilization getMemoryUtil: type: general function accessModifier: public returnType: float description: returns the memory utlization getNumOfInstances: type: general function accessModifier: public returnType: int description: returns the number of instances getApplicationId: type: general function accessMdifier: public returnType: int description: returns the id of the appication getDiskIO: type: genral function accessModifier: public returnType: long description: returns the disk IO utilization getBandwidth: type: genral function accessModifier: public returnType: long description: returns the bandwidth utilization","title":"Metrics"},{"location":"metricsComponents/#metricsmetricsjava","text":"Global variables: timestamp: type: long accessModifier: private description: timestamp of the metrics retrieved totalRuntime: type: long accessModifier: private description: the total runtime of simulation p_cpu: type: float accessModifier: private desription: cpu utilization of a particular process p_memory: type: float accessModifier: private desription: memory utilization of a particular process numOfInstances: type: int accessModifier: private description: the number of instances applicationId: type: int accessModifier: private description: id of the application diskIO: type: long accessModifier: private description: disk IO usage bandwidth: type: long aceessModifier: private description: bandwidth usage Functions: Metrics: type: constructor accessModifier: public description: used for initilization getTimeStamp: type: general function accessModifier: public returnType: long description: returns the timestamp of metrics getRunTime: type: general function accessModifier: public returnType: long description: returns the run time getCpuUtil: type: general function accessModifier: public returnType: float description: returns the cpu utilization getMemoryUtil: type: general function accessModifier: public returnType: float description: returns the memory utlization getNumOfInstances: type: general function accessModifier: public returnType: int description: returns the number of instances getApplicationId: type: general function accessMdifier: public returnType: int description: returns the id of the appication getDiskIO: type: genral function accessModifier: public returnType: long description: returns the disk IO utilization getBandwidth: type: genral function accessModifier: public returnType: long description: returns the bandwidth utilization","title":" metrics/Metrics.java"},{"location":"simulationComponents/","text":"simulation/Simulation.java The core part of the simulation tool which actually simulates the running of the various instances generated from the processes of the applications that are being simulated in the system. They acquire the queue of processes that are to be simulated from the application block and simulates their execution in round robin scheduling format. They change the process states from new, ready, running, waiting, and terminated according to the process states. They simulate the execution of process and on completing the execution of a process instance, removes it from the queue. It also takes care of the number of process instances that are required in the system at any moment. When the number of instances go below the required value, the simulator requests the application block to generate more process instances for simulation. The simulator begins the simulation of execution of process instances from the moment the tool starts and simulates for the duration set in the configuration.","title":"Simulation"},{"location":"simulationComponents/#simulationsimulationjava","text":"The core part of the simulation tool which actually simulates the running of the various instances generated from the processes of the applications that are being simulated in the system. They acquire the queue of processes that are to be simulated from the application block and simulates their execution in round robin scheduling format. They change the process states from new, ready, running, waiting, and terminated according to the process states. They simulate the execution of process and on completing the execution of a process instance, removes it from the queue. It also takes care of the number of process instances that are required in the system at any moment. When the number of instances go below the required value, the simulator requests the application block to generate more process instances for simulation. The simulator begins the simulation of execution of process instances from the moment the tool starts and simulates for the duration set in the configuration.","title":" simulation/Simulation.java"},{"location":"systemComponents/","text":"system/SysConfig.java This java file retrieves data from SysConfig.json file. Global variables: startTime: type: long accessModifier: private description: timestamp of the simulation start time endTime: type: long accessModifier: private description: timestamp of the simulation end time interval: type: long accessModifier: private description: interval in which metrics are collected simDuration: type: long accessModifier: private description: simulation duration numOfProcesses: type: int accessModifier: private description: total number of processes for simulation baseNumOfInstances: type: int accessModifier: private description: base number of instances of processes for simulation quantum: type: int accessModifier: private description: time quantum for round robin function numberOfApplication: type: int accessModifier: private description: total number of application for simulation multiplier: type: float[] accessModifier: private description: seasonality multiplier of the application config: type: JSONObject accessModifier: private description: used for processing the config/SysConfig.json file Functions: SysConfig: type: constructor accessModifier: public description: when called get the data from config/SysConfig.json and process it getStartTime: type: general function accessModifier: public returnType: long description: returns startTime variable getEndTime: type: general function accessModifier: public returnType: long description: returns endTime variable getInterval: type: general function accessModifier: public returnType: long description: returns interval variable getSimDuration: type: general function accessModifier: public returnType: long description: returns simDuration variable getNumberOfApplication: type: general function accessModifier: public returnType: int description: returns numberOfApplication variable getNumOfProcesses: type: general function accessModifier: public returnType: int description: returns numOfProcesses variable getNumOfInstances: type: general function accessModifier: public returnType: int description: returns baseNumOfInstances variable getNumOfInstances: type: general function accessModifier: public returnType: int parameters: currentTime: type: long description: calculates the number of instances for the current time and return it getQuantum: type: general function accessModifier: public returnType: int description: returns quantum variable system/SystemResource.java They allocate and deallocate various system resources to each of the instances upon their requests and according to the availability of the resources in the system. It keeps track of the resource utilisation throughout the process of simulation of the system. Each application has its own share of restem resources assigned to them during the creation of virtual machines in which the application runs. This allocation of resources is handled by the system resource block in the simulation. Each application has their own system resource to use from. This quota is set in the setup phase of the simulation through the configuration file.","title":"System"},{"location":"systemComponents/#systemsysconfigjava","text":"This java file retrieves data from SysConfig.json file. Global variables: startTime: type: long accessModifier: private description: timestamp of the simulation start time endTime: type: long accessModifier: private description: timestamp of the simulation end time interval: type: long accessModifier: private description: interval in which metrics are collected simDuration: type: long accessModifier: private description: simulation duration numOfProcesses: type: int accessModifier: private description: total number of processes for simulation baseNumOfInstances: type: int accessModifier: private description: base number of instances of processes for simulation quantum: type: int accessModifier: private description: time quantum for round robin function numberOfApplication: type: int accessModifier: private description: total number of application for simulation multiplier: type: float[] accessModifier: private description: seasonality multiplier of the application config: type: JSONObject accessModifier: private description: used for processing the config/SysConfig.json file Functions: SysConfig: type: constructor accessModifier: public description: when called get the data from config/SysConfig.json and process it getStartTime: type: general function accessModifier: public returnType: long description: returns startTime variable getEndTime: type: general function accessModifier: public returnType: long description: returns endTime variable getInterval: type: general function accessModifier: public returnType: long description: returns interval variable getSimDuration: type: general function accessModifier: public returnType: long description: returns simDuration variable getNumberOfApplication: type: general function accessModifier: public returnType: int description: returns numberOfApplication variable getNumOfProcesses: type: general function accessModifier: public returnType: int description: returns numOfProcesses variable getNumOfInstances: type: general function accessModifier: public returnType: int description: returns baseNumOfInstances variable getNumOfInstances: type: general function accessModifier: public returnType: int parameters: currentTime: type: long description: calculates the number of instances for the current time and return it getQuantum: type: general function accessModifier: public returnType: int description: returns quantum variable","title":" system/SysConfig.java"},{"location":"systemComponents/#systemsystemresourcejava","text":"They allocate and deallocate various system resources to each of the instances upon their requests and according to the availability of the resources in the system. It keeps track of the resource utilisation throughout the process of simulation of the system. Each application has its own share of restem resources assigned to them during the creation of virtual machines in which the application runs. This allocation of resources is handled by the system resource block in the simulation. Each application has their own system resource to use from. This quota is set in the setup phase of the simulation through the configuration file.","title":" system/SystemResource.java"}]}